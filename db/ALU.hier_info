|ALU
clk => current_number[0].CLK
clk => current_number[1].CLK
clk => current_number[2].CLK
clk => current_number[3].CLK
clk => current_number[4].CLK
clk => current_number[5].CLK
clk => current_number[6].CLK
clk => current_number[7].CLK
clk => show.CLK
clk => second_number[0].CLK
clk => second_number[1].CLK
clk => second_number[2].CLK
clk => second_number[3].CLK
clk => first_number[0].CLK
clk => first_number[1].CLK
clk => first_number[2].CLK
clk => first_number[3].CLK
rst => current_number[0].OUTPUTSELECT
rst => current_number[1].OUTPUTSELECT
rst => current_number[2].OUTPUTSELECT
rst => current_number[3].OUTPUTSELECT
rst => current_number[4].OUTPUTSELECT
rst => current_number[5].OUTPUTSELECT
rst => current_number[6].OUTPUTSELECT
rst => current_number[7].OUTPUTSELECT
rst => show.ACLR
rst => second_number[0].ACLR
rst => second_number[1].ACLR
rst => second_number[2].ACLR
rst => second_number[3].ACLR
rst => first_number[0].ACLR
rst => first_number[1].ACLR
rst => first_number[2].ACLR
rst => first_number[3].ACLR
number[0] => current_number.DATAA
number[0] => second_number.DATAB
number[0] => first_number.DATAB
number[1] => current_number.DATAA
number[1] => second_number.DATAB
number[1] => first_number.DATAB
number[2] => current_number.DATAA
number[2] => second_number.DATAB
number[2] => first_number.DATAB
number[3] => current_number.DATAA
number[3] => second_number.DATAB
number[3] => first_number.DATAB
mux1 => Mux0.IN9
mux1 => Mux1.IN9
mux1 => Mux2.IN9
mux1 => Mux3.IN7
mux1 => Mux4.IN6
mux1 => Mux5.IN6
mux1 => Mux6.IN6
mux1 => Mux7.IN6
mux2 => Mux0.IN10
mux2 => Mux1.IN10
mux2 => Mux2.IN10
mux2 => Mux3.IN8
mux2 => Mux4.IN7
mux2 => Mux5.IN7
mux2 => Mux6.IN7
mux2 => Mux7.IN7
mux3 => Mux0.IN11
mux3 => Mux1.IN11
mux3 => Mux2.IN11
mux3 => Mux3.IN9
mux3 => Mux4.IN8
mux3 => Mux5.IN8
mux3 => Mux6.IN8
mux3 => Mux7.IN8
mux4 => Mux0.IN12
mux4 => Mux1.IN12
mux4 => Mux2.IN12
mux4 => Mux3.IN10
mux4 => Mux4.IN9
mux4 => Mux5.IN9
mux4 => Mux6.IN9
mux4 => Mux7.IN9
load1 => first_number.OUTPUTSELECT
load1 => first_number.OUTPUTSELECT
load1 => first_number.OUTPUTSELECT
load1 => first_number.OUTPUTSELECT
load1 => second_number.OUTPUTSELECT
load1 => second_number.OUTPUTSELECT
load1 => second_number.OUTPUTSELECT
load1 => second_number.OUTPUTSELECT
load1 => current_number.OUTPUTSELECT
load1 => current_number.OUTPUTSELECT
load1 => current_number.OUTPUTSELECT
load1 => current_number.OUTPUTSELECT
load1 => current_number.OUTPUTSELECT
load1 => current_number.OUTPUTSELECT
load1 => current_number.OUTPUTSELECT
load1 => current_number.OUTPUTSELECT
load1 => show.ENA
load2 => second_number.OUTPUTSELECT
load2 => second_number.OUTPUTSELECT
load2 => second_number.OUTPUTSELECT
load2 => second_number.OUTPUTSELECT
load2 => show.OUTPUTSELECT
load2 => current_number.OUTPUTSELECT
load2 => current_number.OUTPUTSELECT
load2 => current_number.OUTPUTSELECT
load2 => current_number.OUTPUTSELECT
load2 => current_number.OUTPUTSELECT
load2 => current_number.OUTPUTSELECT
load2 => current_number.OUTPUTSELECT
load2 => current_number.OUTPUTSELECT
equal => show.OUTPUTSELECT
equal => current_number.OUTPUTSELECT
equal => current_number.OUTPUTSELECT
equal => current_number.OUTPUTSELECT
equal => current_number.OUTPUTSELECT
equal => current_number.OUTPUTSELECT
equal => current_number.OUTPUTSELECT
equal => current_number.OUTPUTSELECT
equal => current_number.OUTPUTSELECT
segs1[0] <= seven_seg_decoder:displays.seven_seg1
segs1[1] <= seven_seg_decoder:displays.seven_seg1
segs1[2] <= seven_seg_decoder:displays.seven_seg1
segs1[3] <= seven_seg_decoder:displays.seven_seg1
segs1[4] <= seven_seg_decoder:displays.seven_seg1
segs1[5] <= seven_seg_decoder:displays.seven_seg1
segs1[6] <= seven_seg_decoder:displays.seven_seg1
segs2[0] <= seven_seg_decoder:displays.seven_seg2
segs2[1] <= seven_seg_decoder:displays.seven_seg2
segs2[2] <= seven_seg_decoder:displays.seven_seg2
segs2[3] <= seven_seg_decoder:displays.seven_seg2
segs2[4] <= seven_seg_decoder:displays.seven_seg2
segs2[5] <= seven_seg_decoder:displays.seven_seg2
segs2[6] <= seven_seg_decoder:displays.seven_seg2
segs3[0] <= seven_seg_decoder:displays.seven_seg3
segs3[1] <= seven_seg_decoder:displays.seven_seg3
segs3[2] <= seven_seg_decoder:displays.seven_seg3
segs3[3] <= seven_seg_decoder:displays.seven_seg3
segs3[4] <= seven_seg_decoder:displays.seven_seg3
segs3[5] <= seven_seg_decoder:displays.seven_seg3
segs3[6] <= seven_seg_decoder:displays.seven_seg3
flags[0] <= <GND>
flags[1] <= <GND>
flags[2] <= <GND>
flags[3] <= <GND>


|ALU|n_bit_adder:adder
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
S[0] <= full_adder:adder[0].u1.S
S[1] <= full_adder:adder[1].u1.S
S[2] <= full_adder:adder[2].u1.S
S[3] <= full_adder:adder[3].u1.S
S[4] <= full_adder:adder[3].u1.Cout


|ALU|n_bit_adder:adder|full_adder:adder[0].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_adder:adder|full_adder:adder[1].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_adder:adder|full_adder:adder[2].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_adder:adder|full_adder:adder[3].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_substractor:substractor
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
D[0] <= full_substractor:substractor[0].u1.D
D[1] <= full_substractor:substractor[1].u1.D
D[2] <= full_substractor:substractor[2].u1.D
D[3] <= full_substractor:substractor[3].u1.D


|ALU|n_bit_substractor:substractor|full_substractor:substractor[0].u1
A => D.IN0
A => and1.IN0
A => and2.IN0
B => D.IN1
B => and2.IN1
B => and3.IN0
Bin => D.IN1
Bin => and1.IN1
Bin => and3.IN1
D <= D.DB_MAX_OUTPUT_PORT_TYPE
Bout <= Bout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_substractor:substractor|full_substractor:substractor[1].u1
A => D.IN0
A => and1.IN0
A => and2.IN0
B => D.IN1
B => and2.IN1
B => and3.IN0
Bin => D.IN1
Bin => and1.IN1
Bin => and3.IN1
D <= D.DB_MAX_OUTPUT_PORT_TYPE
Bout <= Bout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_substractor:substractor|full_substractor:substractor[2].u1
A => D.IN0
A => and1.IN0
A => and2.IN0
B => D.IN1
B => and2.IN1
B => and3.IN0
Bin => D.IN1
Bin => and1.IN1
Bin => and3.IN1
D <= D.DB_MAX_OUTPUT_PORT_TYPE
Bout <= Bout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_substractor:substractor|full_substractor:substractor[3].u1
A => D.IN0
A => and1.IN0
A => and2.IN0
B => D.IN1
B => and2.IN1
B => and3.IN0
Bin => D.IN1
Bin => and1.IN1
Bin => and3.IN1
D <= D.DB_MAX_OUTPUT_PORT_TYPE
Bout <= Bout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier
A[0] => rows.IN0
A[0] => rows.IN0
A[0] => rows.IN0
A[0] => rows.IN0
A[1] => rows.IN0
A[1] => rows.IN0
A[1] => rows.IN0
A[1] => rows.IN0
A[2] => rows.IN0
A[2] => rows.IN0
A[2] => rows.IN0
A[2] => rows.IN0
A[3] => rows.IN0
A[3] => rows.IN0
A[3] => rows.IN0
A[3] => rows.IN0
B[0] => rows.IN1
B[0] => rows.IN1
B[0] => rows.IN1
B[0] => rows.IN1
B[1] => rows.IN1
B[1] => rows.IN1
B[1] => rows.IN1
B[1] => rows.IN1
B[2] => rows.IN1
B[2] => rows.IN1
B[2] => rows.IN1
B[2] => rows.IN1
B[3] => rows.IN1
B[3] => rows.IN1
B[3] => rows.IN1
B[3] => rows.IN1
M[0] <= n_bit_adder:loop3[2].adder1.S
M[1] <= n_bit_adder:loop3[2].adder1.S
M[2] <= n_bit_adder:loop3[2].adder1.S
M[3] <= n_bit_adder:loop3[2].adder1.S
M[4] <= n_bit_adder:loop3[2].adder1.S
M[5] <= n_bit_adder:loop3[2].adder1.S
M[6] <= n_bit_adder:loop3[2].adder1.S
M[7] <= n_bit_adder:loop3[2].adder1.S


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[0].adder1
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
S[0] <= full_adder:adder[0].u1.S
S[1] <= full_adder:adder[1].u1.S
S[2] <= full_adder:adder[2].u1.S
S[3] <= full_adder:adder[3].u1.S
S[4] <= full_adder:adder[4].u1.S
S[5] <= full_adder:adder[5].u1.S
S[6] <= full_adder:adder[6].u1.S
S[7] <= full_adder:adder[6].u1.Cout


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[0].adder1|full_adder:adder[0].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[0].adder1|full_adder:adder[1].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[0].adder1|full_adder:adder[2].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[0].adder1|full_adder:adder[3].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[0].adder1|full_adder:adder[4].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[0].adder1|full_adder:adder[5].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[0].adder1|full_adder:adder[6].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[1].adder1
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
S[0] <= full_adder:adder[0].u1.S
S[1] <= full_adder:adder[1].u1.S
S[2] <= full_adder:adder[2].u1.S
S[3] <= full_adder:adder[3].u1.S
S[4] <= full_adder:adder[4].u1.S
S[5] <= full_adder:adder[5].u1.S
S[6] <= full_adder:adder[6].u1.S
S[7] <= full_adder:adder[6].u1.Cout


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[1].adder1|full_adder:adder[0].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[1].adder1|full_adder:adder[1].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[1].adder1|full_adder:adder[2].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[1].adder1|full_adder:adder[3].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[1].adder1|full_adder:adder[4].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[1].adder1|full_adder:adder[5].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[1].adder1|full_adder:adder[6].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[2].adder1
A[0] => A[0].IN1
A[1] => A[1].IN1
A[2] => A[2].IN1
A[3] => A[3].IN1
A[4] => A[4].IN1
A[5] => A[5].IN1
A[6] => A[6].IN1
B[0] => B[0].IN1
B[1] => B[1].IN1
B[2] => B[2].IN1
B[3] => B[3].IN1
B[4] => B[4].IN1
B[5] => B[5].IN1
B[6] => B[6].IN1
S[0] <= full_adder:adder[0].u1.S
S[1] <= full_adder:adder[1].u1.S
S[2] <= full_adder:adder[2].u1.S
S[3] <= full_adder:adder[3].u1.S
S[4] <= full_adder:adder[4].u1.S
S[5] <= full_adder:adder[5].u1.S
S[6] <= full_adder:adder[6].u1.S
S[7] <= full_adder:adder[6].u1.Cout


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[2].adder1|full_adder:adder[0].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[2].adder1|full_adder:adder[1].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[2].adder1|full_adder:adder[2].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[2].adder1|full_adder:adder[3].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[2].adder1|full_adder:adder[4].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[2].adder1|full_adder:adder[5].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_multiplier:multiplier|n_bit_adder:loop3[2].adder1|full_adder:adder[6].u1
A => and3.IN0
A => and7.IN0
A => and6.IN0
A => and1.IN0
A => and2.IN0
B => and2.IN1
B => and7.IN1
B => and5.IN0
B => and1.IN1
B => and3.IN1
Cin => and1.IN1
Cin => and4.IN1
Cin => and5.IN1
Cin => and6.IN1
Cin => and2.IN1
Cin => and3.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
Cout <= Cout.DB_MAX_OUTPUT_PORT_TYPE


|ALU|n_bit_and:andd
A[0] => Y.IN0
A[1] => Y.IN0
A[2] => Y.IN0
A[3] => Y.IN0
B[0] => Y.IN1
B[1] => Y.IN1
B[2] => Y.IN1
B[3] => Y.IN1
Y[0] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[1] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[2] <= Y.DB_MAX_OUTPUT_PORT_TYPE
Y[3] <= Y.DB_MAX_OUTPUT_PORT_TYPE


|ALU|seven_seg_decoder:displays
n[0] => Mod0.IN13
n[0] => Div0.IN13
n[1] => Mod0.IN12
n[1] => Div0.IN12
n[2] => Mod0.IN11
n[2] => Div0.IN11
n[3] => Mod0.IN10
n[3] => Div0.IN10
n[4] => Mod0.IN9
n[4] => Div0.IN9
n[5] => Mod0.IN8
n[5] => Div0.IN8
n[6] => Mod0.IN7
n[6] => Div0.IN7
n[7] => Mod0.IN6
n[7] => Div0.IN6
seven_seg1[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
seven_seg1[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
seven_seg1[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
seven_seg1[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
seven_seg1[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
seven_seg1[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
seven_seg1[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
seven_seg2[0] <= WideOr13.DB_MAX_OUTPUT_PORT_TYPE
seven_seg2[1] <= WideOr12.DB_MAX_OUTPUT_PORT_TYPE
seven_seg2[2] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
seven_seg2[3] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
seven_seg2[4] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
seven_seg2[5] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
seven_seg2[6] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
seven_seg3[0] <= WideOr20.DB_MAX_OUTPUT_PORT_TYPE
seven_seg3[1] <= WideOr19.DB_MAX_OUTPUT_PORT_TYPE
seven_seg3[2] <= WideOr18.DB_MAX_OUTPUT_PORT_TYPE
seven_seg3[3] <= WideOr17.DB_MAX_OUTPUT_PORT_TYPE
seven_seg3[4] <= WideOr16.DB_MAX_OUTPUT_PORT_TYPE
seven_seg3[5] <= WideOr15.DB_MAX_OUTPUT_PORT_TYPE
seven_seg3[6] <= WideOr14.DB_MAX_OUTPUT_PORT_TYPE


